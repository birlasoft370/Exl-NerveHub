<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="disp_Alert_AlreadyRecorded" xml:space="preserve">
    <value>Transaction for choosen Date Period and Metric on selected Locations has already been recorded! &lt;br&gt; Please check the same by clicking on &lt;b&gt;&lt;u&gt;Show Existing Data Sets&lt;/u&gt;&lt;/b&gt; button.</value>
  </data>
  <data name="disp_Alert_NoCalender" xml:space="preserve">
    <value>No Calender Information exists for this period! You need to define Calender First!</value>
  </data>
  <data name="disp_Alert_NoData" xml:space="preserve">
    <value>No Data to Download</value>
  </data>
  <data name="disp_Alert_NoIputParameter" xml:space="preserve">
    <value>No Input Parameter is defined for Metric Definition</value>
  </data>
  <data name="disp_Alert_NotAllowed" xml:space="preserve">
    <value>You are not allowed to download data as process Off is defined between selected dates!</value>
  </data>
  <data name="disp_Button_DownloadMetricsTemplate" xml:space="preserve">
    <value>Download Metrics Template</value>
  </data>
  <data name="disp_Button_Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="disp_Button_Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="disp_Button_ShowExistingData" xml:space="preserve">
    <value>Show Existing Data Sets</value>
  </data>
  <data name="disp_Button_ShowPendingEntries" xml:space="preserve">
    <value>Show Pending Entries</value>
  </data>
  <data name="disp_Button_UploadData" xml:space="preserve">
    <value>Upload Data</value>
  </data>
  <data name="disp_Grid_Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="disp_Grid_ApprovedRejected" xml:space="preserve">
    <value>Approved/Rejected</value>
  </data>
  <data name="disp_Grid_Catogry" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="disp_Grid_ClientName" xml:space="preserve">
    <value>Client Name</value>
  </data>
  <data name="disp_Grid_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="disp_Grid_Metrics" xml:space="preserve">
    <value>Metric Name</value>
  </data>
  <data name="disp_Grid_ProcessName" xml:space="preserve">
    <value>Process Name</value>
  </data>
  <data name="disp_Grid_Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="disp_Grid_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="disp_Grid_SubProcessName" xml:space="preserve">
    <value>Sub Process Name</value>
  </data>
  <data name="disp_Grid_TransactionDate" xml:space="preserve">
    <value>Transaction Date</value>
  </data>
  <data name="disp_Label_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="disp_Label_EndDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="disp_Label_FromDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="disp_Label_Locations" xml:space="preserve">
    <value>Locations</value>
  </data>
  <data name="disp_Label_Metric" xml:space="preserve">
    <value>Metric</value>
  </data>
  <data name="disp_Label_MultipleDates" xml:space="preserve">
    <value>Multiple Dates</value>
  </data>
  <data name="disp_Label_SelectFileToUpload" xml:space="preserve">
    <value>Select File to Upload</value>
  </data>
  <data name="disp_Label_StartDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="disp_Label_SubProcess" xml:space="preserve">
    <value>Sub-Process Name</value>
  </data>
  <data name="disp_Label_ToDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="disp_PageTitle_DataApproval" xml:space="preserve">
    <value>BIReport | Data Approval</value>
  </data>
  <data name="disp_PageTitle_UnlockTransaction" xml:space="preserve">
    <value>BIReport | Unlock Transaction</value>
  </data>
  <data name="disp_Page_Header_Approval" xml:space="preserve">
    <value>Data Approval</value>
  </data>
  <data name="disp_Page_Heading" xml:space="preserve">
    <value>Data Capture</value>
  </data>
  <data name="disp_Page_Heading_UnlockTransaction" xml:space="preserve">
    <value>Unlock Transaction</value>
  </data>
  <data name="disp_Page_Title" xml:space="preserve">
    <value>BIReport | Data Capture</value>
  </data>
  <data name="disp_Page_TitleDataUpload" xml:space="preserve">
    <value>BIReport | Data Upload</value>
  </data>
  <data name="disp_Period" xml:space="preserve">
    <value>Select Period:</value>
  </data>
  <data name="disp_ReportType" xml:space="preserve">
    <value>Report Type:</value>
  </data>
  <data name="disp_UnlockAction" xml:space="preserve">
    <value>Unlock Action:</value>
  </data>
  <data name="req_Locations" xml:space="preserve">
    <value>Please select any location</value>
  </data>
  <data name="req_Period" xml:space="preserve">
    <value>Please select period</value>
  </data>
  <data name="req_ReportType" xml:space="preserve">
    <value>Please select report type</value>
  </data>
  <data name="req_UnlockAction" xml:space="preserve">
    <value>Please unlock action</value>
  </data>
</root>