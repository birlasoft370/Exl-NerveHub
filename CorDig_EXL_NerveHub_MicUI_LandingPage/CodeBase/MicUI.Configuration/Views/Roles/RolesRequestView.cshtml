@using MicUI.Configuration.Models.ViewModels;
@model RoleViewModel
@{
    ViewBag.Title = @BPA.GlobalResources.UI.AppConfiguration.Resources_Roles.display_Request_Status_List;
}
<div class="px-3">

    <div class="row align-items-end">
        <div class="col-sm-4 col-xl-4">
            <div class="mb-3">
                @Html.LabelFor(x => x.StartDate, new { @class = "form-label" })
                @(Html.Kendo().DatePicker().Name("StartDate").HtmlAttributes(new { @class = "form-date" }).Value(DateTime.Now).Min(new DateTime(1998, 12, 31)).Max(new DateTime(2115, 12, 31)).Events(e => e.Change("startChange")))
            </div>
        </div>

        <div class="col-sm-4 col-xl-4">
            <div class="mb-3">
                @Html.LabelFor(x => x.EndDate, new { @class = "form-label" })
                @(Html.Kendo().DatePicker().Name("EndDate").HtmlAttributes(new { @class = "form-date" }).Value(DateTime.Now).Min(new DateTime(1998, 12, 31)).Max(new DateTime(2115, 12, 31)).Events(e => e.Change("endChange")))
            </div>
        </div>
        <div class="col-sm-4 col-xl-auto">
            <div class="mb-3 pb-1">
                @Html.Kendo().Button().Icon("search").Name("BtnGetList").Content(@BPA.GlobalResources.UI.AppConfiguration.Resources_Roles.display_Get_Status_List).Events(e => e.Click("getStatusList")).HtmlAttributes(new { @class = "btn-primary btn btn-sm" })
            </div>
        </div>
    </div>

    <div class="nextWrap">
        <div class="formTable">
            @(Html.Kendo().Grid(Model.RoleRequestList).Name("gridRoleRequest").HtmlAttributes(new { style = "height:100%;" }).Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
                .Columns(columns =>
                {
                    columns.Bound(p => p.RequestId).Hidden(true);
                    columns.Bound(p => p.RequestDesc);
                    columns.Bound(p => p.RequestBy);
                    columns.Bound(p => p.RequestApprover);
                    columns.Bound(p => p.RequestDate);
                    columns.Bound(p => p.RequestStatus);
                    columns.Bound("").ClientTemplate("# if(RequestStatus == 'Pending') {#" + "<a  class='btn-outline-primary btn-sm btn'  onClick='btnCancelRequest(#= RequestId #)'>" + @BPA.GlobalResources.UI.AppConfiguration.Resources_Roles.display_Cancel_Request + "</a>" + "#}#").Width(80);
                    //columns.Command(command => command.Custom(@BPA.GlobalResources.UI.AppConfiguration.Resources_Roles.display_Cancel_Request).Click("btnCancelRequest").HtmlAttributes(new { @class = "k-primary" })).Title(@BPA.GlobalResources.UI.AppConfiguration.Resources_Roles.display_Cancel_Request);
                }).Sortable().DataSource(dataSource => dataSource.Ajax().ServerOperation(true).PageSize(10).Model(model => model.Id(p => p.RequestId)).Read(read => read.Action("RoleRequest_ReadP", "Roles").Data("getDate")))
                )
        </div>
    </div>
</div>

