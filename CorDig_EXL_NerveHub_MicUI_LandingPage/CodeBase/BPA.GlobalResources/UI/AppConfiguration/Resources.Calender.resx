<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="confirmDelete" xml:space="preserve">
    <value>Do you wish to delete Calendar?</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="displayCalendarName" xml:space="preserve">
    <value>Calendar Name:</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="msgDeleted" xml:space="preserve">
    <value>Calendar data deleted successfully !.</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="msgError" xml:space="preserve">
    <value>Error Occured!</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="msgSave" xml:space="preserve">
    <value>Calendar data saved successfully !.</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="msgUpdate" xml:space="preserve">
    <value>Calendar data updated successfully !.</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="QualityManagement" xml:space="preserve">
    <value>Quality Management</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="requiredCalName" xml:space="preserve">
    <value>Please enter Calendar Name.</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="TitleCalendarMaster" xml:space="preserve">
    <value>Calendar Master</value>
    <comment>Calendar Master</comment>
  </data>
  <data name="msgCalendarAlreadyDefined" xml:space="preserve">
    <value>Calendar already defined for week</value>
  </data>
  <data name="msgCalendarDataInformation" xml:space="preserve">
    <value>Calendar Data Information</value>
  </data>
  <data name="msgDateRangeOverLap" xml:space="preserve">
    <value>Date range overlaps with already defined calendar for week</value>
  </data>
  <data name="dispalyDefineWeek" xml:space="preserve">
    <value>Define Week</value>
  </data>
  <data name="displayCalendarData" xml:space="preserve">
    <value>Calenda Data</value>
  </data>
  <data name="EndDateCheck" xml:space="preserve">
    <value>End date must be greater than start date for row</value>
  </data>
  <data name="displayCalendarDataView" xml:space="preserve">
    <value>Calenda Data View</value>
    <comment>Calendar Data</comment>
  </data>
  <data name="displayCalendar" xml:space="preserve">
    <value>Calendar:</value>
  </data>
  <data name="displayEndDateofMonth" xml:space="preserve">
    <value>End Date Of Month:</value>
  </data>
  <data name="displayMonth" xml:space="preserve">
    <value>Month:</value>
  </data>
  <data name="displayStartDateofMonth" xml:space="preserve">
    <value>Start Date Of Month:</value>
  </data>
  <data name="displayWeekStartDay" xml:space="preserve">
    <value>Week Start Day:</value>
  </data>
  <data name="displayYear" xml:space="preserve">
    <value>Year:</value>
  </data>
  <data name="requiredCalendar" xml:space="preserve">
    <value>Please select Calendar Name.</value>
  </data>
  <data name="requiredDefineCalendar" xml:space="preserve">
    <value>Please define Calendar.</value>
  </data>
  <data name="requiredEndDateofMonth" xml:space="preserve">
    <value>Please select End Date Of Month.</value>
  </data>
  <data name="requiredMonth" xml:space="preserve">
    <value>Please select Month.</value>
  </data>
  <data name="requiredStartDateofMonth" xml:space="preserve">
    <value>Pease select Start Date Of Month.</value>
  </data>
  <data name="requiredWeekList" xml:space="preserve">
    <value>Please define Week.</value>
  </data>
  <data name="requiredWeekStartDay" xml:space="preserve">
    <value>Please select Week Start Day.</value>
  </data>
  <data name="requiredYear" xml:space="preserve">
    <value>Please select Year. </value>
  </data>
  <data name="displayCalendarMasterList" xml:space="preserve">
    <value>Calendar Master List</value>
  </data>
  <data name="displayDescription" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="displayDisable" xml:space="preserve">
    <value>Disable:</value>
  </data>
  <data name="displayUpdaed" xml:space="preserve">
    <value>Calendar Data Updated.</value>
  </data>
  <data name="dispCreateNewCal" xml:space="preserve">
    <value>Create New Calendar</value>
  </data>
  <data name="dispModifyCal" xml:space="preserve">
    <value>Modify Exising Calendar</value>
  </data>
  <data name="dispSearchCal" xml:space="preserve">
    <value>Search Calendar</value>
  </data>
  <data name="dispCreateNewCalData" xml:space="preserve">
    <value>Create New Calendar Data</value>
  </data>
  <data name="dispModifyNewCalData" xml:space="preserve">
    <value>Modify Existing Calendar Data</value>
  </data>
  <data name="SearchCreateCalData" xml:space="preserve">
    <value>Search Calendar Data</value>
  </data>
  <data name="dispCalendarDataExist" xml:space="preserve">
    <value>Calendar data exists already. Please enter another data for calendar.  </value>
  </data>
  <data name="dispDateRangeOverlaps" xml:space="preserve">
    <value>Date range overlaps with already defined calendar for week  </value>
  </data>
  <data name="displayAddNewRow" xml:space="preserve">
    <value>Add New Row</value>
    <comment>Calendar Data</comment>
  </data>
  <data name="displayEndDate" xml:space="preserve">
    <value>End Date</value>
    <comment>Calendar Data</comment>
  </data>
  <data name="displayStartDate" xml:space="preserve">
    <value>Start Date</value>
    <comment>Calendar Data</comment>
  </data>
  <data name="displayWeek" xml:space="preserve">
    <value>Week</value>
    <comment>Calendar Data</comment>
  </data>
  <data name="msg_DataDeleted" xml:space="preserve">
    <value>Data Deleted successfully!</value>
  </data>
</root>