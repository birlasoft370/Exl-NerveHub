@using MicUI.WorkManagement.Models.ViewModels;
@model WorkDefinitionViewModel
@{
    ViewBag.Title = "Index";
}
<link href="~/css/bpa/content/themes/jquery.ui.button.css" rel="stylesheet" />
<div>
    <div class="formTable">
        <div class="px-3">
            @*.Editable("function(dataItem, additionalParam) { return isEditable(dataItem, additionalParam); }")*@
            @(Html.Kendo().Grid(Model.AddTAB)
                .Name("GridChoiceTAB")
                .Selectable()
                .Pageable()
                .Sortable()
                .Scrollable().Events(events => events.DataBound("onRowBoundSearchGrid"))
                .ToolBar(toolbar => toolbar.Create().Text(BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_AddNewRecord).HtmlAttributes(new { @class = "btn-primary btn-sm btn mb-3" }))
                .Columns(columns =>
                {
                    columns.Bound(u => u.iObjectChoiceID).Hidden(true);
                    columns.Bound(u => u.sChoiceValue).HtmlAttributes(new { @class = "ObjectName alphaonly", @required = "required", @style = "text-align:left;" }).Title(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_ObjectNameTAB).Width(200).EditorTemplateName(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_TABValue);
                    columns.Bound(u => u.sTABNameValue).Title(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_DisplatTABName).Width(120);
                    columns.Bound(u => u.iOrder).Title(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_DisplayOrder).Width(120);
                    //columns.Bound(u => u.iGroupID).Title(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_GroupID).Width(80);
                    columns.Bound(u => u.bDisabled).ClientTemplate("<label class='only-check-input'><input type='checkbox' class='bDisabled' #= bDisabled ? checked='checked' : '' # /><b></b></label>").Title(@BPA.GlobalResources.UI.WorkManagement.Resource_WorkDefinition.display_Disable).Width(80);
                    columns.Command(command => command.Custom(@BPA.GlobalResources.UI.Resources_common.display_BtnDelete).HtmlAttributes(new { @class = "btn-outline-primary btn-sm btn" }).Click("deleteTABClick")).Width(90);

                }).Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Bottom))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model =>
                {
                    model.Id(u => u.iObjectChoiceID);

                })
                ))
        </div>
    </div>

    <div class="k-window-footer text-end">
        @(Html.Kendo().Button().Name("btnSaveTab").Icon("plus").HtmlAttributes(new { type = "button", @class = "btn-primary btn-sm btn" }).Content(@BPA.GlobalResources.UI.Resources_common.display_btnSaveClose).Events(ev => ev.Click("SaveTABNameClick")))

    </div>
    <script>
        function isEditable(dataItem, additionalParam) {
            debugger;
            //var dataSource = $("#GridChoiceTAB").data("kendoGrid").dataSource;
            //// If the id(ProductID) is null, then it is editable.
            //return e.iObjectChoiceID == null;
        }
        $(".bDisabled").on("click", function () {
            var rin = $(this).parent().parent().index();
            var grid = $("#GridChoice").data("kendoGrid");
            /* Get & Set Visibility checkBox*/
            if (this.className.toLowerCase().indexOf('bdisabled') >= 0) {
                $(this).is(":checked") == true ? grid.dataSource._data[rin].bDisabled = true : grid.dataSource._data[rin].bDisabled = false;
            }
        });
        var urlPathGetFilterList = ResourceLayout.partialURL + "GetFilterList";
        var urlPatheditWorkDefination = ResourceLayout.partialURL + "editWorkDefination";
        var urlPathSaveWorkData = ResourceLayout.partialURL + "SaveWorkData";
        var urlPathIndex = ResourceLayout.partialURL + "Index";
        var urlPathObjectFormula = ResourceLayout.partialURL + "ObjectFormula";
        var urlPathCreateRESTControls = ResourceLayout.partialURL + "CreateRESTControls";
        var urlPathUpdatePreViewData = ResourceLayout.partialURL + "UpdatePreViewData";
        var urlPath_WorkPreview = ResourceLayout.partialURL + "_WorkPreview";
        var urlPathSearchView = ResourceLayout.partialURL + "SearchView";
        var urlPathApprovalView = ResourceLayout.partialURL + "ApprovalView";
        var urlPathGetProcessID = ResourceLayout.partialURL + "GetProcessID";
        var urlTranslateChoice = ResourceLayout.partialURL + "GetTranslateChoiceLanguage";
        var urlTranslateChoiceSave = ResourceLayout.partialURL + "GetTranslateChoiceLanguageSave";

        var urlPathSaveTabName_Temp = ResourceLayout.partialURL + "SaveTabName_Temp";

        if (bClientLanguage == "True") {
            var urlGetLanguage = ResourceLayout.partialURL + "GetTranslateList";
            var urlGetChoiceLanguageTempData = ResourceLayout.partialURL + "GetChoiceLanguageTemp";

        }
        var bClientLanguage = '@Model.oTenant.ClientMultiLanguage';
    </script>
</div>